diff --git a/notebooks/Example-1.ipynb b/notebooks/Example-1.ipynb
index 0ef35a4..e2d856f 100644
--- a/notebooks/Example-1.ipynb
+++ b/notebooks/Example-1.ipynb
@@ -1,9 +1,377 @@
 {
  "cells": [
+  {
+   "cell_type": "code",
+   "execution_count": 2,
+   "id": "bddf4885-9ab5-4321-b66f-1e0277da7c6a",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "from hcpinnseikonal import *"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "id": "ae510489-e60e-494e-ade6-470fc69977d0",
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "import wandb\n",
+    "\n",
+    "if __name__ == \"__main__\":\n",
+    "    \n",
+    "    wandb.init(project=\"GFATT_PINNs-11-pytorch-surface-inversion\")\n",
+    "    \n",
+    "    wandb.run.log_code(\".\")\n",
+    "\n",
+    "    parser = ArgumentParser(description=\"Chekcerboard Test\")\n",
+    "\n",
+    "    parser.add_argument(\n",
+    "        \"--lateral_spacing\",\n",
+    "        type=float,\n",
+    "        default=0.01,\n",
+    "        help=\"Lateral sampling.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--vertical_spacing\",\n",
+    "        type=float,\n",
+    "        default=0.01,\n",
+    "        help=\"Vertical sampling.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--max_offset\",\n",
+    "        type=float,\n",
+    "        default=5.,\n",
+    "        help=\"Maximum offset.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--max_depth\",\n",
+    "        type=float,\n",
+    "        default=1.,\n",
+    "        help=\"Maximum depth.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--rec_spacing\",\n",
+    "        type=int,\n",
+    "        default=10,\n",
+    "        help=\"Receiver sampling.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--sou_spacing\",\n",
+    "        type=int,\n",
+    "        default=10,\n",
+    "        help=\"Source sampling.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--num_epochs\",\n",
+    "        type=int,\n",
+    "        default=250,\n",
+    "        help=\"Epochs length.\",\n",
+    "    )    \n",
+    "    parser.add_argument(\n",
+    "        \"--num_neurons\",\n",
+    "        type=int,\n",
+    "        default=20,\n",
+    "        help=\"Neurons width.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--num_layers\",\n",
+    "        type=int,\n",
+    "        default=10,\n",
+    "        help=\"Layers depth.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--learning_rate\",\n",
+    "        type=float,\n",
+    "        default=1e-3,\n",
+    "        help=\"Learning rate.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--model_type\",\n",
+    "        type=str,\n",
+    "        default='seam',\n",
+    "        help=\"Type of velocity model used.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--data_type\",\n",
+    "        type=str,\n",
+    "        default='full',\n",
+    "        help=\"Type of data interpolation used.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--middle_shot\",\n",
+    "        type=str,\n",
+    "        default='n',\n",
+    "        help=\"Whether the shots centered at the model (number of shot fixed) or spread accross.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--until_cmb\",\n",
+    "        type=str,\n",
+    "        default='n',\n",
+    "        help=\"Whether the velocity reaches only down to the core-mantle boundary(CMB).\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--earth_scale\",\n",
+    "        type=str,\n",
+    "        default='n',\n",
+    "        help=\"Whether the experiment mimics the actual Earth's coordinate values.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--scale_factor\",\n",
+    "        type=int,\n",
+    "        default=10,\n",
+    "        help=\"When the experiments are scaled this corresponds to the factor.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--reduce_after\",\n",
+    "        type=int,\n",
+    "        default=15,\n",
+    "        help=\"When the learning rate should be reduced after stagnancy.\",\n",
+    "    )    \n",
+    "    parser.add_argument(\n",
+    "        \"--seed\",\n",
+    "        type=int,\n",
+    "        default=123,\n",
+    "        help=\"Seed for reproducibility.\",\n",
+    "    ) \n",
+    "    parser.add_argument(\n",
+    "        \"--initialization\",\n",
+    "        type=str,\n",
+    "        default='varianceScaling',\n",
+    "        help=\"Seed for reproducibility.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--plotting_factor\",\n",
+    "        type=int,\n",
+    "        default=1,\n",
+    "        help=\"The multiplication of the coordinate values (default is 1 km x 5 km, vertically and laterally).\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--rescale_plot\",\n",
+    "        type=str,\n",
+    "        default='n',\n",
+    "        help=\"Whether the plotting is scaled to mimic the Earth Crust experiment.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--depth_shift\",\n",
+    "        type=str,\n",
+    "        default='n',\n",
+    "        help=\"Whether the plotting is shifted.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--tau_multiplier\",\n",
+    "        type=float,\n",
+    "        default=3.,\n",
+    "        help=\"Scaling factor for the last layer in the tau model.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--initial_velocity\",\n",
+    "        type=float,\n",
+    "        default=4,\n",
+    "        help=\"Starting velocity.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--zid_source\",\n",
+    "        type=int,\n",
+    "        default=5,\n",
+    "        help=\"Z index of the source location.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--zid_receiver\",\n",
+    "        type=int,\n",
+    "        default=0,\n",
+    "        help=\"Z index of the receiver location.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--explode_reflector\",\n",
+    "        type=str,\n",
+    "        default='n',\n",
+    "        help=\"Boolean whether to place the shots in the middle.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--field_synthetic\",\n",
+    "        type=str,\n",
+    "        default='n',\n",
+    "        help=\"Boolean to mimic the field earthquake South California data.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--v_multiplier\",\n",
+    "        type=float,\n",
+    "        default=3,\n",
+    "        help=\"Scaling factor for the last layer in the v model.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--activation\",\n",
+    "        type=str,\n",
+    "        default='elu',\n",
+    "        help=\"Type of activation function.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--num_points\",\n",
+    "        type=float,\n",
+    "        default=1.,\n",
+    "        help=\"Fraction of the collocation points.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--irregular_grid\",\n",
+    "        type=str,\n",
+    "        default='n',\n",
+    "        help=\"Boolean to select random non-regular grid training points.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--xid_well\",\n",
+    "        type=int,\n",
+    "        default=5,\n",
+    "        help=\"Z index of the well location.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--last_vmultiplier\",\n",
+    "        type=int,\n",
+    "        default=5,\n",
+    "        help=\"Integer scalar for the output of the velocity network.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--nu_units\",\n",
+    "        type=str,\n",
+    "        default='unitless',\n",
+    "        help=\"Set whether the velocity network predicts a scalar (unitless) qantity or the velocity field directly.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--well_depth\",\n",
+    "        type=int,\n",
+    "        default=None,\n",
+    "        help=\"Depth index of the end point of the well.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--exp_function\",\n",
+    "        type=str,\n",
+    "        default='n',\n",
+    "        help=\"Imposing smoothness through exponential function.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--exp_factor\",\n",
+    "        type=float,\n",
+    "        default=1.,\n",
+    "        help=\"Imposing smoothness through exponential function; its factor.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--exclude_topo\",\n",
+    "        type=str,\n",
+    "        default='n',\n",
+    "        help=\"Whether the receiver stations locations are not a function of the topopgraphy.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--exclude_well\",\n",
+    "        type=str,\n",
+    "        default='n',\n",
+    "        help=\"Boolean whether to include the well location for training.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--exclude_source\",\n",
+    "        type=str,\n",
+    "        default='n',\n",
+    "        help=\"Boolean whether to include the source location for training.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--loss_function\",\n",
+    "        type=str,\n",
+    "        default='mse',\n",
+    "        help=\"Type of metric for the regression loss.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--station_factor\",\n",
+    "        type=float,\n",
+    "        default=1.,\n",
+    "        help=\"Scale the real earthquake depth for semi-synhtetic experiments.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--event_factor\",\n",
+    "        type=float,\n",
+    "        default=1.,\n",
+    "        help=\"Scale the real earthquake depth for semi-synhtetic experiments.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--checker_size\",\n",
+    "        type=float,\n",
+    "        default=5.,\n",
+    "        help=\"Scale the real earthquake depth for semi-synhtetic experiments.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--tau_act\",\n",
+    "        type=str,\n",
+    "        default='None',\n",
+    "        help=\"Last activation function for the tau model.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--empty_middle\",\n",
+    "        type=str,\n",
+    "        default='n',\n",
+    "        help=\"Imposing no recording nor shot in the middle part of the model.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--factorization_type\",\n",
+    "        type=str,\n",
+    "        default='multiplicative',\n",
+    "        help=\"Types of factorization used for the eikonal.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--causality_factor\",\n",
+    "        type=float,\n",
+    "        default=1.,\n",
+    "        help=\"Exponential coefficient from the original CausalPINNs paper.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--causality_weight\",\n",
+    "        type=str,\n",
+    "        default='type_0',\n",
+    "        help=\"Exponential coefficient from the original CausalPINNs paper.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--residual_network\",\n",
+    "        type=str,\n",
+    "        default='n',\n",
+    "        help=\"Whether a network with residual connections is used.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--velocity_loss\",\n",
+    "        type=str,\n",
+    "        default='n',\n",
+    "        help=\"Whether the loss uses a velocity unit.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--regular_station\",\n",
+    "        type=str,\n",
+    "        default='n',\n",
+    "        help=\"Whether the station for the field is regularly sampled.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--data_neurons\",\n",
+    "        type=int,\n",
+    "        default=16,\n",
+    "        help=\"Neurons width.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--data_layers\",\n",
+    "        type=int,\n",
+    "        default=8,\n",
+    "        help=\"Layers depth.\",\n",
+    "    )\n",
+    "    parser.add_argument(\n",
+    "        \"--append_shot\",\n",
+    "        type=str,\n",
+    "        default='n',\n",
+    "        help=\"Whether we add virtual shot at the bottom right of the model.\",\n",
+    "    )\n",
+    "    args = parser.parse_args([])\n",
+    "    dict_args = vars(args)\n",
+    "    print(dict_args)"
+   ]
+  },
   {
    "cell_type": "code",
    "execution_count": null,
-   "id": "d1db5870-edb7-4a9a-a723-caa0d132698f",
+   "id": "a2c6fc60-cac1-4243-a81e-da4d4d5f23d6",
    "metadata": {},
    "outputs": [],
    "source": []
